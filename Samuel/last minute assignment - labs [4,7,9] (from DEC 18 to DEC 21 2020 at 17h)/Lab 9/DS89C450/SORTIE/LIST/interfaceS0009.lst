###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             28/Oct/2019  04:35:49 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  C:\Users\yves.roy\Sync\2019-08                     #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\SOURCE\interfaceS0009.c                    #
#    Command line       =  "C:\Users\yves.roy\Sync\2019-08                    #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\SOURCE\interfaceS0009.c" -D                #
#                          OPTION_COMPILE_AVEC_IAR -lCN                       #
#                          "C:\Users\yves.roy\Sync\2019-08                    #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\LIST\" -lb                #
#                          "C:\Users\yves.roy\Sync\2019-08                    #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\LIST\" -o                 #
#                          "C:\Users\yves.roy\Sync\2019-08                    #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\OBJ\" -e --no_cse         #
#                          --no_unroll --no_inline --no_code_motion           #
#                          --no_tbaa --debug --core=plain --dptr=16,1         #
#                          --data_model=large --code_model=near               #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data --nr_virtual_regs 8         #
#                          --dlib_config "C:\Program Files (x86)\IAR          #
#                          Systems\Embedded Workbench                         #
#                          6.4\8051\LIB\DLIB\dl8051Normal.h" -On --eec++      #
#    List file          =  C:\Users\yves.roy\Sync\2019-08                     #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\LIST\interfaceS0009.lst   #
#    Object file        =  C:\Users\yves.roy\Sync\2019-08                     #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\OBJ\interfaceS0009.r51    #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\yves.roy\Sync\2019-08 247-637\LOGICIEL\S-0008\247-637 S-0006 college\SOURCE\interfaceS0009.c
      1          //interfaceS0009:
      2          //Historique: 
      3          // 2018-10-28, Yves Roy, creation
      4          
      5          //INCLUSIONS
      6          #include "main.h"
      7          #ifdef SERVICEPROTOCOLE637_DEBUG
      8            #include "piloteUART0.h"
      9          #endif
     10          #include "piloteUART1.h"
     11          #include "serviceBaseDeTemps.h"
     12          #include "serviceProtocole637.h"
     13          #include "interfaceB1.h"
     14          #include "interfaceS0009.h"
     15          
     16          //Definitions privees
     17          //pas de définitions privees
     18          
     19          //Declarations de fonctions privees:
     20          void interfaceS0009_recupereLesDonneesRecues(void);
     21          unsigned char interfaceS0009_valideLaReception(void);
     22          void interfaceS0009_prepareLaTransmission(void);
     23          void interfaceS0009_gereLaReception(void);
     24          void interfaceS0009_gereLaTransmission(void);
     25          
     26          //Definitions de variables privees:

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     27          unsigned char interfaceS0009_octetsTraites[INTERFACES0009_NOMBRE_D_OCTETS_A_RECEVOIR];
   \                     interfaceS0009_octetsTraites:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z
     28          
     29          //Definitions de fonctions privees:

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     30          void interfaceS0009_recupereLesDonneesRecues(void)
   \                     ??interfaceS0009_recupereLesDonneesRecues:
     31          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     32          unsigned char i;
     33            for (i = 0; i < INTERFACES0009_NOMBRE_D_OCTETS_A_RECEVOIR; i++)
   \   000005   7800         MOV     R0,#0x0
   \                     ??interfaceS0009_recupereLesDonneesRecues_1:
   \   000007   E8           MOV     A,R0
   \   000008   C3           CLR     C
   \   000009   9404         SUBB    A,#0x4
   \   00000B   502B         JNC     ??interfaceS0009_recupereLesDonneesRecues_2
     34            {
     35              interfaceS0009.octetsRecus[i] = serviceProtocole637.octetsRecus[i];
   \   00000D   88..         MOV     ?V0 + 0,R0
   \   00000F   75..00       MOV     ?V0 + 1,#0x0
   \   000012   74..         MOV     A,#(serviceProtocole637 + 2) & 0xff
   \   000014   25..         ADD     A,?V0 + 0
   \   000016   F582         MOV     DPL,A
   \   000018   74..         MOV     A,#((serviceProtocole637 + 2) >> 8) & 0xff
   \   00001A   35..         ADDC    A,?V0 + 1
   \   00001C   F583         MOV     DPH,A
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   C0E0         PUSH    A
   \   000021   88..         MOV     ?V0 + 0,R0
   \   000023   75..00       MOV     ?V0 + 1,#0x0
   \   000026   74..         MOV     A,#(interfaceS0009 + 2) & 0xff
   \   000028   25..         ADD     A,?V0 + 0
   \   00002A   F582         MOV     DPL,A
   \   00002C   74..         MOV     A,#((interfaceS0009 + 2) >> 8) & 0xff
   \   00002E   35..         ADDC    A,?V0 + 1
   \   000030   F583         MOV     DPH,A
   \   000032   D0E0         POP     A
   \   000034   F0           MOVX    @DPTR,A
     36            }
   \   000035   08           INC     R0
   \   000036   80CF         SJMP    ??interfaceS0009_recupereLesDonneesRecues_1
     37          }
   \                     ??interfaceS0009_recupereLesDonneesRecues_2:
   \   000038   7F02         MOV     R7,#0x2
   \   00003A   02....       LJMP    ?FUNC_LEAVE_XDATA
     38          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     39          unsigned char interfaceS0009_valideLaReception(void)
   \                     ??interfaceS0009_valideLaReception:
     40          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     41          unsigned char i;
     42            for (i = 0; i < INTERFACES0009_NOMBRE_D_OCTETS_A_RECEVOIR; i++)
   \   000005   7800         MOV     R0,#0x0
   \                     ??interfaceS0009_valideLaReception_1:
   \   000007   E8           MOV     A,R0
   \   000008   C3           CLR     C
   \   000009   9404         SUBB    A,#0x4
   \   00000B   501C         JNC     ??interfaceS0009_valideLaReception_2
     43            {
     44              if (interfaceS0009.octetsRecus[i] != i)
   \   00000D   88..         MOV     ?V0 + 0,R0
   \   00000F   75..00       MOV     ?V0 + 1,#0x0
   \   000012   74..         MOV     A,#(interfaceS0009 + 2) & 0xff
   \   000014   25..         ADD     A,?V0 + 0
   \   000016   F582         MOV     DPL,A
   \   000018   74..         MOV     A,#((interfaceS0009 + 2) >> 8) & 0xff
   \   00001A   35..         ADDC    A,?V0 + 1
   \   00001C   F583         MOV     DPH,A
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   68           XRL     A,R0
   \   000020   6004         JZ      ??interfaceS0009_valideLaReception_3
     45              {
     46                return INTERFACES0009_ERREUR_OCTET_INVALIDE;
   \   000022   7902         MOV     R1,#0x2
   \   000024   8005         SJMP    ??interfaceS0009_valideLaReception_4
     47              }
     48            }  
   \                     ??interfaceS0009_valideLaReception_3:
   \   000026   08           INC     R0
   \   000027   80DE         SJMP    ??interfaceS0009_valideLaReception_1
     49            return INTERFACES0009_PAS_D_ERREURS;
   \                     ??interfaceS0009_valideLaReception_2:
   \   000029   7900         MOV     R1,#0x0
   \                     ??interfaceS0009_valideLaReception_4:
   \   00002B   7F02         MOV     R7,#0x2
   \   00002D   02....       LJMP    ?FUNC_LEAVE_XDATA
     50          }
     51          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     52          void interfaceS0009_prepareLaTransmission(void)
   \                     ??interfaceS0009_prepareLaTransmission:
     53          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     54          unsigned char i;
     55            for (i = 0; i < INTERFACES0009_NOMBRE_D_OCTETS_A_TRANSMETTRE; i++)
   \   000005   7800         MOV     R0,#0x0
   \                     ??interfaceS0009_prepareLaTransmission_1:
   \   000007   E8           MOV     A,R0
   \   000008   C3           CLR     C
   \   000009   9404         SUBB    A,#0x4
   \   00000B   502B         JNC     ??interfaceS0009_prepareLaTransmission_2
     56            {
     57              serviceProtocole637.octetsATransmettre[i] = interfaceS0009.octetsATransmettre[i];
   \   00000D   88..         MOV     ?V0 + 0,R0
   \   00000F   75..00       MOV     ?V0 + 1,#0x0
   \   000012   74..         MOV     A,#(interfaceS0009 + 7) & 0xff
   \   000014   25..         ADD     A,?V0 + 0
   \   000016   F582         MOV     DPL,A
   \   000018   74..         MOV     A,#((interfaceS0009 + 7) >> 8) & 0xff
   \   00001A   35..         ADDC    A,?V0 + 1
   \   00001C   F583         MOV     DPH,A
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   C0E0         PUSH    A
   \   000021   88..         MOV     ?V0 + 0,R0
   \   000023   75..00       MOV     ?V0 + 1,#0x0
   \   000026   74..         MOV     A,#(serviceProtocole637 + 20) & 0xff
   \   000028   25..         ADD     A,?V0 + 0
   \   00002A   F582         MOV     DPL,A
   \   00002C   74..         MOV     A,#((serviceProtocole637 + 20) >> 8) & 0xff
   \   00002E   35..         ADDC    A,?V0 + 1
   \   000030   F583         MOV     DPH,A
   \   000032   D0E0         POP     A
   \   000034   F0           MOVX    @DPTR,A
     58            }
   \   000035   08           INC     R0
   \   000036   80CF         SJMP    ??interfaceS0009_prepareLaTransmission_1
     59            serviceProtocole637.nombreATransmettre = INTERFACES0009_NOMBRE_D_OCTETS_A_TRANSMETTRE;
   \                     ??interfaceS0009_prepareLaTransmission_2:
   \   000038   90....       MOV     DPTR,#serviceProtocole637 + 19
   \   00003B   7404         MOV     A,#0x4
   \   00003D   F0           MOVX    @DPTR,A
     60          }
   \   00003E   7F02         MOV     R7,#0x2
   \   000040   02....       LJMP    ?FUNC_LEAVE_XDATA
     61          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     62          void interfaceS0009_gereLaReception(void)
   \                     ??interfaceS0009_gereLaReception:
     63          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     64            if (serviceProtocole637.information == INFORMATION_TRAITEE)
   \   000004   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   000007   E0           MOVX    A,@DPTR
   \   000008   6025         JZ      ??interfaceS0009_gereLaReception_1
     65            {
     66              return;
     67            }
     68            serviceProtocole637.information = INFORMATION_TRAITEE;
   \   00000A   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   00000D   7400         MOV     A,#0x0
   \   00000F   F0           MOVX    @DPTR,A
     69            interfaceS0009.information = INFORMATION_DISPONIBLE;
   \   000010   90....       MOV     DPTR,#interfaceS0009
   \   000013   7401         MOV     A,#0x1
   \   000015   F0           MOVX    @DPTR,A
     70            if (serviceProtocole637.statut != SERVICEPROTOCOLE637_PAS_D_ERREURS)
   \   000016   90....       MOV     DPTR,#serviceProtocole637 + 37
   \   000019   E0           MOVX    A,@DPTR
   \   00001A   6008         JZ      ??interfaceS0009_gereLaReception_2
     71            {
     72              interfaceS0009.statut = INTERFACES0009_ERREUR_AU_NIVEAU_DU_PILOTE;
   \   00001C   90....       MOV     DPTR,#interfaceS0009 + 1
   \   00001F   7401         MOV     A,#0x1
   \   000021   F0           MOVX    @DPTR,A
     73              return;
   \   000022   800B         SJMP    ??interfaceS0009_gereLaReception_1
     74            }
     75            interfaceS0009_recupereLesDonneesRecues();
   \                     ??interfaceS0009_gereLaReception_2:
   \   000024                ; Setup parameters for call to function interfaceS0009_recupereLesDonneesRecues()
   \   000024   12....       LCALL   ??interfaceS0009_recupereLesDonneesRecues
     76            interfaceS0009.statut = interfaceS0009_valideLaReception();
   \   000027                ; Setup parameters for call to function interfaceS0009_valideLaReception()
   \   000027   12....       LCALL   ??interfaceS0009_valideLaReception
   \   00002A   E9           MOV     A,R1
   \   00002B   90....       MOV     DPTR,#interfaceS0009 + 1
   \   00002E   F0           MOVX    @DPTR,A
     77          }
   \                     ??interfaceS0009_gereLaReception_1:
   \   00002F   D083         POP     DPH
   \   000031   D082         POP     DPL
   \   000033   22           RET
     78          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     79          void interfaceS0009_gereLaTransmission(void)
   \                     ??interfaceS0009_gereLaTransmission:
     80          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     81            if (serviceProtocole637.requete == REQUETE_ACTIVE)
   \   000004   90....       MOV     DPTR,#serviceProtocole637 + 18
   \   000007   E0           MOVX    A,@DPTR
   \   000008   6401         XRL     A,#0x1
   \   00000A   6015         JZ      ??interfaceS0009_gereLaTransmission_1
     82            {
     83              return;
     84            }
     85            if (interfaceS0009.requete == REQUETE_TRAITEE)
   \   00000C   90....       MOV     DPTR,#interfaceS0009 + 6
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   600F         JZ      ??interfaceS0009_gereLaTransmission_1
     86            {
     87              return;
     88            }
     89            interfaceS0009_prepareLaTransmission();  
   \   000012                ; Setup parameters for call to function interfaceS0009_prepareLaTransmission()
   \   000012   12....       LCALL   ??interfaceS0009_prepareLaTransmission
     90            serviceProtocole637.requete = REQUETE_ACTIVE;
   \   000015   90....       MOV     DPTR,#serviceProtocole637 + 18
   \   000018   7401         MOV     A,#0x1
   \   00001A   F0           MOVX    @DPTR,A
     91            interfaceS0009.requete = REQUETE_TRAITEE;
   \   00001B   90....       MOV     DPTR,#interfaceS0009 + 6
   \   00001E   7400         MOV     A,#0x0
   \   000020   F0           MOVX    @DPTR,A
     92          }
   \                     ??interfaceS0009_gereLaTransmission_1:
   \   000021   D083         POP     DPH
   \   000023   D082         POP     DPL
   \   000025   22           RET
     93          
     94          //Definitions de variables publiques:

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     95          INTERFACES0009 interfaceS0009;
   \                     interfaceS0009:
   \   000000                DS 11
   \   00000B                REQUIRE __INIT_XDATA_Z
     96          
     97          //Definitions de fonctions publiques:

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     98          void interfaceS0009_initialise(void)
   \                     ??interfaceS0009_initialise:
     99          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    100            interfaceS0009.information = INFORMATION_TRAITEE;
   \   000004   90....       MOV     DPTR,#interfaceS0009
   \   000007   7400         MOV     A,#0x0
   \   000009   F0           MOVX    @DPTR,A
    101            interfaceS0009.requete = REQUETE_TRAITEE;
   \   00000A   90....       MOV     DPTR,#interfaceS0009 + 6
   \   00000D   7400         MOV     A,#0x0
   \   00000F   F0           MOVX    @DPTR,A
    102            serviceBaseDeTemps_execute[INTERFACES0009_PHASE_RECEPTION] =
    103                interfaceS0009_gereLaReception;
   \   000010   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 4
   \   000013   74..         MOV     A,#??interfaceS0009_gereLaReception & 0xff
   \   000015   F0           MOVX    @DPTR,A
   \   000016   A3           INC     DPTR
   \   000017   74..         MOV     A,#(??interfaceS0009_gereLaReception >> 8) & 0xff
   \   000019   F0           MOVX    @DPTR,A
    104            serviceBaseDeTemps_execute[INTERFACES0009_PHASE_TRANSMISSION] =
    105                interfaceS0009_gereLaTransmission;
   \   00001A   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 10
   \   00001D   74..         MOV     A,#??interfaceS0009_gereLaTransmission & 0xff
   \   00001F   F0           MOVX    @DPTR,A
   \   000020   A3           INC     DPTR
   \   000021   74..         MOV     A,#(??interfaceS0009_gereLaTransmission >> 8) & 0xff
   \   000023   F0           MOVX    @DPTR,A
    106          }
   \   000024   D083         POP     DPH
   \   000026   D082         POP     DPL
   \   000028   22           RET

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       2      0      0  interfaceS0009_gereLaReception()
                          2 0 0 -> interfaceS0009_recupereLesDonneesRecues()
                          2 0 0 -> interfaceS0009_valideLaReception()
       2      0      0  interfaceS0009_gereLaTransmission()
                          2 0 0 -> interfaceS0009_prepareLaTransmission()
       2      0      0  interfaceS0009_initialise()
       1      0      9  interfaceS0009_prepareLaTransmission()
       1      0      9  interfaceS0009_recupereLesDonneesRecues()
       0      0      9  interfaceS0009_valideLaReception()


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      11  interfaceS0009
      52  interfaceS0009_gereLaReception()
      38  interfaceS0009_gereLaTransmission()
      41  interfaceS0009_initialise()
       4  interfaceS0009_octetsTraites
      67  interfaceS0009_prepareLaTransmission()
      61  interfaceS0009_recupereLesDonneesRecues()
      48  interfaceS0009_valideLaReception()

 
 307 bytes in segment NEAR_CODE
  15 bytes in segment XDATA_Z
 
 307 bytes of CODE  memory
  15 bytes of XDATA memory

Errors: none
Warnings: none
