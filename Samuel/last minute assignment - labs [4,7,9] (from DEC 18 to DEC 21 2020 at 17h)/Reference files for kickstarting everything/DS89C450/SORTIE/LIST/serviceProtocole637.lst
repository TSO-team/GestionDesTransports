###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             28/Oct/2019  04:35:50 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  C:\Users\yves.roy\Sync\2019-08                     #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\SOURCE\serviceProtocole637.c               #
#    Command line       =  "C:\Users\yves.roy\Sync\2019-08                    #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\SOURCE\serviceProtocole637.c" -D           #
#                          OPTION_COMPILE_AVEC_IAR -lCN                       #
#                          "C:\Users\yves.roy\Sync\2019-08                    #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\LIST\" -lb                #
#                          "C:\Users\yves.roy\Sync\2019-08                    #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\LIST\" -o                 #
#                          "C:\Users\yves.roy\Sync\2019-08                    #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\OBJ\" -e --no_cse         #
#                          --no_unroll --no_inline --no_code_motion           #
#                          --no_tbaa --debug --core=plain --dptr=16,1         #
#                          --data_model=large --code_model=near               #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data --nr_virtual_regs 8         #
#                          --dlib_config "C:\Program Files (x86)\IAR          #
#                          Systems\Embedded Workbench                         #
#                          6.4\8051\LIB\DLIB\dl8051Normal.h" -On --eec++      #
#    List file          =  C:\Users\yves.roy\Sync\2019-08                     #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\LIST\serviceProtocole637. #
#                          lst                                                #
#    Object file        =  C:\Users\yves.roy\Sync\2019-08                     #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\OBJ\serviceProtocole637.r #
#                          51                                                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\yves.roy\Sync\2019-08 247-637\LOGICIEL\S-0008\247-637 S-0006 college\SOURCE\serviceProtocole637.c
      1          //serviceProtocole637:
      2          //Historique: 
      3          // 2018-10-28, Yves Roy, creation
      4          
      5          //INCLUSIONS
      6          #include "main.h"
      7          #ifdef SERVICEPROTOCOLE637_DEBUG
      8            #include "piloteUART0.h"
      9          #endif
     10          #include "piloteUART1.h"
     11          #include "serviceBaseDeTemps.h"
     12          #include "serviceProtocole637.h"
     13          
     14          //Definitions privees
     15          #define SERVICEPROTOCOLE637_COMPTE_MAXIMAL_DE_SYNCHRONISATION_EN_TRANSMISSION (\
     16              FREQUENCE_DE_LA_BASE_DE_TEMPS_EN_HZ \
     17              /SERVICEPROTOCOLE637_FREQUENCE_MAXIMALE_DES_TRANSMISSIONS_EN_HZ )
     18          #define SERVICEPROTOCOLE637_TRANSMISSION_PERMISE 1
     19          #define SERVICEPROTOCOLE637_TRANSMISSION_RETARDEE 0
     20          #define SERVICEPROTOCOLE637_RECEPTION_PERMISE 1
     21          #define SERVICEPROTOCOLE637_RECEPTION_RETARDEE 0
     22          #define SERVICEPROTOCOLE637_LECTURE_PAS_DISPONIBLE 0
     23          #define SERVICEPROTOCOLE637_LECTURE_DISPONIBLE 1
     24          #define SERVICEPROTOCOLE637_COMPTE_MAXIMAL_ENTRE_LES_RECEPTIONS (\
     25              SERVICEPROTOCOLE637_TEMPS_D_ATTENTE_MAXIMAL_EN_MS \
     26              * SERVICEPROTOCOLE637_FREQUENCE_MAXIMALE_DES_LECTURES_EN_HZ / 1000.0)
     27          #define SERVICEPROTOCOLE637_TEMPS_DEPASSE 1
     28          #define SERVICEPROTOCOLE637_TEMPS_PAS_DEPASSE 0
     29          #define SERVICEPROTOCOLE637_COMPTE_MAXIMAL_DE_SYNCHRONISATION_EN_RECEPTION (\
     30              FREQUENCE_DE_LA_BASE_DE_TEMPS_EN_HZ \
     31              /SERVICEPROTOCOLE637_FREQUENCE_MAXIMALE_DES_LECTURES_EN_HZ)
     32          
     33          //Declarations de fonctions privees:
     34          void serviceProtocole637_attendUneRequete(void);
     35          void serviceProtocole637_transmetLaLongueur(void);
     36          void serviceProtocole637_transmetUneDonnee(void);
     37          void serviceProtocole637_transmetUnZero(void);
     38          void serviceProtocole637_transmetUnChecksum(void);
     39          unsigned char serviceProtocole637_gereLaSynchronisationDesTransmissions(void);
     40          void serviceProtocole637_attendUnDebut(void);
     41          void serviceProtocole637_attendLaLongueur(void);
     42          void serviceProtocole637_attendUneDonnee(void);
     43          void serviceProtocole637_attendUnZero(void);
     44          void serviceProtocole637_attendUnChecksum(void);
     45          unsigned char serviceProtocole637_gereLaSynchronisationDesReceptions(void);
     46          unsigned char serviceProtocole637_gereLeTempsDAttente(void);
     47          unsigned char serviceProtocole637_gereUneReception(void);
     48          
     49          //Definitions de variables privees:
     50          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     51          unsigned char serviceProtocole637_compteurDeSynchronisationDesTransmissions;
   \                     serviceProtocole637_compteurDeSynchronisationDesTransmissions:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     52          unsigned char serviceProtocole637_compteurDeSynchronisationDesReceptions;
   \                     serviceProtocole637_compteurDeSynchronisationDesReceptions:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     53          unsigned char serviceProtocole637_compteurDeTransmissions;
   \                     serviceProtocole637_compteurDeTransmissions:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     54          unsigned char serviceProtocole637_compteurDeReceptions;
   \                     serviceProtocole637_compteurDeReceptions:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     55          unsigned char serviceProtocole637_compteurDeTempsDAttente;
   \                     serviceProtocole637_compteurDeTempsDAttente:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     56          unsigned char serviceProtocole637_reception;
   \                     serviceProtocole637_reception:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     57          unsigned char serviceProtocole637_checksum;
   \                     serviceProtocole637_checksum:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     58          unsigned char serviceProtocole637_checksumDeReception;
   \                     serviceProtocole637_checksumDeReception:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     59          unsigned char serviceProtocole637_checksumDeTransmission;
   \                     serviceProtocole637_checksumDeTransmission:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     60          
     61          //Definitions de fonctions privees:

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     62          void serviceProtocole637_attendUneRequete(void)
   \                     ??serviceProtocole637_attendUneRequete:
     63          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     64            if (serviceProtocole637_gereLaSynchronisationDesTransmissions()
     65                == SERVICEPROTOCOLE637_TRANSMISSION_RETARDEE)
   \   000004                ; Setup parameters for call to function serviceProtocole637_gereLaSynchronisationDesTransmissions()
   \   000004   12....       LCALL   ??serviceProtocole637_gereLaSynchronisationDesT
   \   000007   E9           MOV     A,R1
   \   000008   601A         JZ      ??serviceProtocole637_attendUneRequete_1
     66            {
     67              return;
     68            }
     69            if (serviceProtocole637.requete == REQUETE_TRAITEE)
   \   00000A   90....       MOV     DPTR,#serviceProtocole637 + 18
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   6014         JZ      ??serviceProtocole637_attendUneRequete_1
     70            {
     71              return;
     72            }
     73            piloteUART1_transmet(SERVICEPROTOCOLE637_DEBUT_DE_TRAME);
   \   000010                ; Setup parameters for call to function piloteUART1_transmet(unsigned char)
   \   000010   7924         MOV     R1,#0x24
   \   000012   12....       LCALL   ??piloteUART1_transmet
     74          #ifdef SERVICEPROTOCOLE637_DEBUG
     75            piloteUART0_transmet(SERVICEPROTOCOLE637_DEBUT_DE_TRAME);
   \   000015                ; Setup parameters for call to function piloteUART0_transmet(unsigned char)
   \   000015   7924         MOV     R1,#0x24
   \   000017   12....       LCALL   ??piloteUART0_transmet
     76          #endif
     77            serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_TRANSMISSION] =
     78                serviceProtocole637_transmetLaLongueur;
   \   00001A   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 6
   \   00001D   74..         MOV     A,#??serviceProtocole637_transmetLaLongueur & 0xff
   \   00001F   F0           MOVX    @DPTR,A
   \   000020   A3           INC     DPTR
   \   000021   74..         MOV     A,#(??serviceProtocole637_transmetLaLongueur >> 8) & 0xff
   \   000023   F0           MOVX    @DPTR,A
     79              return;
   \                     ??serviceProtocole637_attendUneRequete_1:
   \   000024   D083         POP     DPH
   \   000026   D082         POP     DPL
   \   000028   22           RET
     80          }
     81          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     82          void serviceProtocole637_transmetLaLongueur(void)
   \                     ??serviceProtocole637_transmetLaLongueur:
     83          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     84            if (serviceProtocole637_gereLaSynchronisationDesTransmissions()
     85                == SERVICEPROTOCOLE637_TRANSMISSION_RETARDEE)
   \   000004                ; Setup parameters for call to function serviceProtocole637_gereLaSynchronisationDesTransmissions()
   \   000004   12....       LCALL   ??serviceProtocole637_gereLaSynchronisationDesT
   \   000007   E9           MOV     A,R1
   \   000008   6026         JZ      ??serviceProtocole637_transmetLaLongueur_1
     86            {
     87              return;
     88            }
     89            piloteUART1_transmet(serviceProtocole637.nombreATransmettre);
   \   00000A                ; Setup parameters for call to function piloteUART1_transmet(unsigned char)
   \   00000A   90....       MOV     DPTR,#serviceProtocole637 + 19
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F9           MOV     R1,A
   \   00000F   12....       LCALL   ??piloteUART1_transmet
     90          #ifdef SERVICEPROTOCOLE637_DEBUG
     91            piloteUART0_transmet(serviceProtocole637.nombreATransmettre);
   \   000012                ; Setup parameters for call to function piloteUART0_transmet(unsigned char)
   \   000012   90....       MOV     DPTR,#serviceProtocole637 + 19
   \   000015   E0           MOVX    A,@DPTR
   \   000016   F9           MOV     R1,A
   \   000017   12....       LCALL   ??piloteUART0_transmet
     92          #endif
     93            serviceProtocole637_compteurDeTransmissions = 0;
   \   00001A   90....       MOV     DPTR,#serviceProtocole637_compteurDeTransmissions
   \   00001D   7400         MOV     A,#0x0
   \   00001F   F0           MOVX    @DPTR,A
     94            serviceProtocole637_checksumDeTransmission = 0;
   \   000020   90....       MOV     DPTR,#serviceProtocole637_checksumDeTransmission
   \   000023   7400         MOV     A,#0x0
   \   000025   F0           MOVX    @DPTR,A
     95            serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_TRANSMISSION] =
     96                serviceProtocole637_transmetUneDonnee;
   \   000026   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 6
   \   000029   74..         MOV     A,#??serviceProtocole637_transmetUneDonnee & 0xff
   \   00002B   F0           MOVX    @DPTR,A
   \   00002C   A3           INC     DPTR
   \   00002D   74..         MOV     A,#(??serviceProtocole637_transmetUneDonnee >> 8) & 0xff
   \   00002F   F0           MOVX    @DPTR,A
     97          }
   \                     ??serviceProtocole637_transmetLaLongueur_1:
   \   000030   D083         POP     DPH
   \   000032   D082         POP     DPL
   \   000034   22           RET
     98          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     99          void serviceProtocole637_transmetUneDonnee(void)
   \                     ??serviceProtocole637_transmetUneDonnee:
    100          {
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
    101          unsigned char donnee;
    102            if (serviceProtocole637_gereLaSynchronisationDesTransmissions()
    103                == SERVICEPROTOCOLE637_TRANSMISSION_RETARDEE)
   \   000005                ; Setup parameters for call to function serviceProtocole637_gereLaSynchronisationDesTransmissions()
   \   000005   12....       LCALL   ??serviceProtocole637_gereLaSynchronisationDesT
   \   000008   E9           MOV     A,R1
   \   000009   6051         JZ      ??serviceProtocole637_transmetUneDonnee_1
    104            {
    105              return;
    106            }
    107            donnee = serviceProtocole637.octetsATransmettre[serviceProtocole637_compteurDeTransmissions];
   \   00000B   90....       MOV     DPTR,#serviceProtocole637_compteurDeTransmissions
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   F8           MOV     R0,A
   \   000010   7900         MOV     R1,#0x0
   \   000012   74..         MOV     A,#(serviceProtocole637 + 20) & 0xff
   \   000014   28           ADD     A,R0
   \   000015   F582         MOV     DPL,A
   \   000017   74..         MOV     A,#((serviceProtocole637 + 20) >> 8) & 0xff
   \   000019   39           ADDC    A,R1
   \   00001A   F583         MOV     DPH,A
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   FE           MOV     R6,A
    108            serviceProtocole637_checksumDeTransmission += donnee;
   \   00001E   90....       MOV     DPTR,#serviceProtocole637_checksumDeTransmission
   \   000021   E0           MOVX    A,@DPTR
   \   000022   2E           ADD     A,R6
   \   000023   F0           MOVX    @DPTR,A
    109            serviceProtocole637_compteurDeTransmissions++;
   \   000024   90....       MOV     DPTR,#serviceProtocole637_compteurDeTransmissions
   \   000027   E0           MOVX    A,@DPTR
   \   000028   2401         ADD     A,#0x1
   \   00002A   F0           MOVX    @DPTR,A
    110            piloteUART1_transmet(donnee);
   \   00002B                ; Setup parameters for call to function piloteUART1_transmet(unsigned char)
   \   00002B   EE           MOV     A,R6
   \   00002C   F9           MOV     R1,A
   \   00002D   12....       LCALL   ??piloteUART1_transmet
    111          #ifdef SERVICEPROTOCOLE637_DEBUG
    112            piloteUART0_transmet(donnee);
   \   000030                ; Setup parameters for call to function piloteUART0_transmet(unsigned char)
   \   000030   EE           MOV     A,R6
   \   000031   F9           MOV     R1,A
   \   000032   12....       LCALL   ??piloteUART0_transmet
    113          #endif
    114            if (donnee == SERVICEPROTOCOLE637_DEBUT_DE_TRAME)
   \   000035   7424         MOV     A,#0x24
   \   000037   6E           XRL     A,R6
   \   000038   700C         JNZ     ??serviceProtocole637_transmetUneDonnee_2
    115            {
    116              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_TRANSMISSION] =
    117                  serviceProtocole637_transmetUnZero;
   \   00003A   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 6
   \   00003D   74..         MOV     A,#??serviceProtocole637_transmetUnZero & 0xff
   \   00003F   F0           MOVX    @DPTR,A
   \   000040   A3           INC     DPTR
   \   000041   74..         MOV     A,#(??serviceProtocole637_transmetUnZero >> 8) & 0xff
   \   000043   F0           MOVX    @DPTR,A
    118              return;
   \   000044   8016         SJMP    ??serviceProtocole637_transmetUneDonnee_1
    119            }
    120            if (serviceProtocole637_compteurDeTransmissions == serviceProtocole637.nombreATransmettre)
   \                     ??serviceProtocole637_transmetUneDonnee_2:
   \   000046   90....       MOV     DPTR,#serviceProtocole637_compteurDeTransmissions
   \   000049   E0           MOVX    A,@DPTR
   \   00004A   F8           MOV     R0,A
   \   00004B   90....       MOV     DPTR,#serviceProtocole637 + 19
   \   00004E   E0           MOVX    A,@DPTR
   \   00004F   68           XRL     A,R0
   \   000050   700A         JNZ     ??serviceProtocole637_transmetUneDonnee_1
    121            {
    122              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_TRANSMISSION] =
    123                  serviceProtocole637_transmetUnChecksum;
   \   000052   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 6
   \   000055   74..         MOV     A,#??serviceProtocole637_transmetUnChecksum & 0xff
   \   000057   F0           MOVX    @DPTR,A
   \   000058   A3           INC     DPTR
   \   000059   74..         MOV     A,#(??serviceProtocole637_transmetUnChecksum >> 8) & 0xff
   \   00005B   F0           MOVX    @DPTR,A
    124            }
    125          }
   \                     ??serviceProtocole637_transmetUneDonnee_1:
   \   00005C   7F01         MOV     R7,#0x1
   \   00005E   02....       LJMP    ?FUNC_LEAVE_XDATA
    126          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    127          void serviceProtocole637_transmetUnZero(void)
   \                     ??serviceProtocole637_transmetUnZero:
    128          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    129            if (serviceProtocole637_gereLaSynchronisationDesTransmissions()
    130                == SERVICEPROTOCOLE637_TRANSMISSION_RETARDEE)
   \   000004                ; Setup parameters for call to function serviceProtocole637_gereLaSynchronisationDesTransmissions()
   \   000004   12....       LCALL   ??serviceProtocole637_gereLaSynchronisationDesT
   \   000007   E9           MOV     A,R1
   \   000008   602C         JZ      ??serviceProtocole637_transmetUnZero_1
    131            {
    132              return;
    133            }
    134            piloteUART1_transmet(SERVICEPROTOCOLE637_INSERTION);
   \   00000A                ; Setup parameters for call to function piloteUART1_transmet(unsigned char)
   \   00000A   7900         MOV     R1,#0x0
   \   00000C   12....       LCALL   ??piloteUART1_transmet
    135           #ifdef SERVICEPROTOCOLE637_DEBUG
    136            piloteUART0_transmet(SERVICEPROTOCOLE637_INSERTION);
   \   00000F                ; Setup parameters for call to function piloteUART0_transmet(unsigned char)
   \   00000F   7900         MOV     R1,#0x0
   \   000011   12....       LCALL   ??piloteUART0_transmet
    137          #endif 
    138            if(serviceProtocole637_compteurDeTransmissions == serviceProtocole637.nombreATransmettre)
   \   000014   90....       MOV     DPTR,#serviceProtocole637_compteurDeTransmissions
   \   000017   E0           MOVX    A,@DPTR
   \   000018   F8           MOV     R0,A
   \   000019   90....       MOV     DPTR,#serviceProtocole637 + 19
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   68           XRL     A,R0
   \   00001E   700C         JNZ     ??serviceProtocole637_transmetUnZero_2
    139            {
    140              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_TRANSMISSION] =
    141                  serviceProtocole637_transmetUnChecksum;
   \   000020   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 6
   \   000023   74..         MOV     A,#??serviceProtocole637_transmetUnChecksum & 0xff
   \   000025   F0           MOVX    @DPTR,A
   \   000026   A3           INC     DPTR
   \   000027   74..         MOV     A,#(??serviceProtocole637_transmetUnChecksum >> 8) & 0xff
   \   000029   F0           MOVX    @DPTR,A
    142              return;
   \   00002A   800A         SJMP    ??serviceProtocole637_transmetUnZero_1
    143            }
    144            serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_TRANSMISSION] =
    145                serviceProtocole637_transmetUneDonnee;
   \                     ??serviceProtocole637_transmetUnZero_2:
   \   00002C   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 6
   \   00002F   74..         MOV     A,#??serviceProtocole637_transmetUneDonnee & 0xff
   \   000031   F0           MOVX    @DPTR,A
   \   000032   A3           INC     DPTR
   \   000033   74..         MOV     A,#(??serviceProtocole637_transmetUneDonnee >> 8) & 0xff
   \   000035   F0           MOVX    @DPTR,A
    146          }
   \                     ??serviceProtocole637_transmetUnZero_1:
   \   000036   D083         POP     DPH
   \   000038   D082         POP     DPL
   \   00003A   22           RET
    147          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    148          void serviceProtocole637_transmetUnChecksum(void)
   \                     ??serviceProtocole637_transmetUnChecksum:
    149          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    150            if (serviceProtocole637_gereLaSynchronisationDesTransmissions() 
    151                == SERVICEPROTOCOLE637_TRANSMISSION_RETARDEE)
   \   000004                ; Setup parameters for call to function serviceProtocole637_gereLaSynchronisationDesTransmissions()
   \   000004   12....       LCALL   ??serviceProtocole637_gereLaSynchronisationDesT
   \   000007   E9           MOV     A,R1
   \   000008   6020         JZ      ??serviceProtocole637_transmetUnChecksum_1
    152            {
    153              return;
    154            }
    155            piloteUART1_transmet(serviceProtocole637_checksumDeTransmission);
   \   00000A                ; Setup parameters for call to function piloteUART1_transmet(unsigned char)
   \   00000A   90....       MOV     DPTR,#serviceProtocole637_checksumDeTransmission
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F9           MOV     R1,A
   \   00000F   12....       LCALL   ??piloteUART1_transmet
    156          #ifdef SERVICEPROTOCOLE637_DEBUG
    157            piloteUART0_transmet(serviceProtocole637_checksumDeTransmission);
   \   000012                ; Setup parameters for call to function piloteUART0_transmet(unsigned char)
   \   000012   90....       MOV     DPTR,#serviceProtocole637_checksumDeTransmission
   \   000015   E0           MOVX    A,@DPTR
   \   000016   F9           MOV     R1,A
   \   000017   12....       LCALL   ??piloteUART0_transmet
    158          #endif  
    159            serviceProtocole637.requete = REQUETE_TRAITEE;
   \   00001A   90....       MOV     DPTR,#serviceProtocole637 + 18
   \   00001D   7400         MOV     A,#0x0
   \   00001F   F0           MOVX    @DPTR,A
    160            serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_TRANSMISSION] =
    161                serviceProtocole637_attendUneRequete;
   \   000020   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 6
   \   000023   74..         MOV     A,#??serviceProtocole637_attendUneRequete & 0xff
   \   000025   F0           MOVX    @DPTR,A
   \   000026   A3           INC     DPTR
   \   000027   74..         MOV     A,#(??serviceProtocole637_attendUneRequete >> 8) & 0xff
   \   000029   F0           MOVX    @DPTR,A
    162          }
   \                     ??serviceProtocole637_transmetUnChecksum_1:
   \   00002A   D083         POP     DPH
   \   00002C   D082         POP     DPL
   \   00002E   22           RET
    163          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    164          unsigned char serviceProtocole637_gereLaSynchronisationDesTransmissions(void)
   \                     ??serviceProtocole637_gereLaSynchronisationDesT:
    165          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    166            serviceProtocole637_compteurDeSynchronisationDesTransmissions++;
   \   000004   90....       MOV     DPTR,#serviceProtocole637_compteurDeSynchronisationDesTransmissions
   \   000007   E0           MOVX    A,@DPTR
   \   000008   2401         ADD     A,#0x1
   \   00000A   F0           MOVX    @DPTR,A
    167            if (serviceProtocole637_compteurDeSynchronisationDesTransmissions <
    168                SERVICEPROTOCOLE637_COMPTE_MAXIMAL_DE_SYNCHRONISATION_EN_TRANSMISSION)
   \   00000B   90....       MOV     DPTR,#serviceProtocole637_compteurDeSynchronisationDesTransmissions
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   C3           CLR     C
   \   000010   9404         SUBB    A,#0x4
   \   000012   5004         JNC     ??serviceProtocole637_gereLaSynchronisationDesT_1
    169            {
    170              return SERVICEPROTOCOLE637_TRANSMISSION_RETARDEE;
   \   000014   7900         MOV     R1,#0x0
   \   000016   8008         SJMP    ??serviceProtocole637_gereLaSynchronisationDesT_2
    171            }
    172            serviceProtocole637_compteurDeSynchronisationDesTransmissions = 0;
   \                     ??serviceProtocole637_gereLaSynchronisationDesT_1:
   \   000018   90....       MOV     DPTR,#serviceProtocole637_compteurDeSynchronisationDesTransmissions
   \   00001B   7400         MOV     A,#0x0
   \   00001D   F0           MOVX    @DPTR,A
    173            return SERVICEPROTOCOLE637_TRANSMISSION_PERMISE;
   \   00001E   7901         MOV     R1,#0x1
   \                     ??serviceProtocole637_gereLaSynchronisationDesT_2:
   \   000020   D083         POP     DPH
   \   000022   D082         POP     DPL
   \   000024   22           RET
    174          }
    175          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    176          void serviceProtocole637_attendUnDebut(void)
   \                     ??serviceProtocole637_attendUnDebut:
    177          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    178            if (serviceProtocole637_gereUneReception() == SERVICEPROTOCOLE637_LECTURE_PAS_DISPONIBLE)
   \   000004                ; Setup parameters for call to function serviceProtocole637_gereUneReception()
   \   000004   12....       LCALL   ??serviceProtocole637_gereUneReception
   \   000007   E9           MOV     A,R1
   \   000008   602E         JZ      ??serviceProtocole637_attendUnDebut_1
    179            {
    180              return;
    181            }
    182          #ifdef SERVICEPROTOCOLE637_DEBUG  
    183            piloteUART0_transmet(serviceProtocole637_reception);      
   \   00000A                ; Setup parameters for call to function piloteUART0_transmet(unsigned char)
   \   00000A   90....       MOV     DPTR,#serviceProtocole637_reception
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F9           MOV     R1,A
   \   00000F   12....       LCALL   ??piloteUART0_transmet
    184          #endif
    185            if (serviceProtocole637_reception == SERVICEPROTOCOLE637_DEBUT_DE_TRAME)
   \   000012   90....       MOV     DPTR,#serviceProtocole637_reception
   \   000015   E0           MOVX    A,@DPTR
   \   000016   6424         XRL     A,#0x24
   \   000018   7012         JNZ     ??serviceProtocole637_attendUnDebut_2
    186            {
    187              serviceProtocole637_compteurDeTempsDAttente = 0;
   \   00001A   90....       MOV     DPTR,#serviceProtocole637_compteurDeTempsDAttente
   \   00001D   7400         MOV     A,#0x0
   \   00001F   F0           MOVX    @DPTR,A
    188              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    189                  serviceProtocole637_attendLaLongueur;
   \   000020   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000023   74..         MOV     A,#??serviceProtocole637_attendLaLongueur & 0xff
   \   000025   F0           MOVX    @DPTR,A
   \   000026   A3           INC     DPTR
   \   000027   74..         MOV     A,#(??serviceProtocole637_attendLaLongueur >> 8) & 0xff
   \   000029   F0           MOVX    @DPTR,A
    190              return;
   \   00002A   800C         SJMP    ??serviceProtocole637_attendUnDebut_1
    191            }
    192            serviceProtocole637.statut = SERVICEPROTOCOLE637_ERREUR_EN_ATTENTE;
   \                     ??serviceProtocole637_attendUnDebut_2:
   \   00002C   90....       MOV     DPTR,#serviceProtocole637 + 37
   \   00002F   7401         MOV     A,#0x1
   \   000031   F0           MOVX    @DPTR,A
    193            serviceProtocole637.information = INFORMATION_DISPONIBLE;
   \   000032   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   000035   7401         MOV     A,#0x1
   \   000037   F0           MOVX    @DPTR,A
    194          }
   \                     ??serviceProtocole637_attendUnDebut_1:
   \   000038   D083         POP     DPH
   \   00003A   D082         POP     DPL
   \   00003C   22           RET
    195          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    196          void serviceProtocole637_attendLaLongueur(void)
   \                     ??serviceProtocole637_attendLaLongueur:
    197          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    198            if (serviceProtocole637_gereLaSynchronisationDesReceptions()
    199                == SERVICEPROTOCOLE637_RECEPTION_RETARDEE)
   \   000004                ; Setup parameters for call to function serviceProtocole637_gereLaSynchronisationDesReceptions()
   \   000004   12....       LCALL   ??serviceProtocole637_gereLaSynchronisationDesR
   \   000007   E9           MOV     A,R1
   \   000008   7003         JNZ     $+5
   \   00000A   02....       LJMP    ??serviceProtocole637_attendLaLongueur_1
    200            {
    201              return;
    202            }
    203            if (serviceProtocole637_gereLeTempsDAttente() == SERVICEPROTOCOLE637_TEMPS_DEPASSE)
   \   00000D                ; Setup parameters for call to function serviceProtocole637_gereLeTempsDAttente()
   \   00000D   12....       LCALL   ??serviceProtocole637_gereLeTempsDAttente
   \   000010   E9           MOV     A,R1
   \   000011   6401         XRL     A,#0x1
   \   000013   7016         JNZ     ??serviceProtocole637_attendLaLongueur_2
    204            {
    205              serviceProtocole637.statut = SERVICEPROTOCOLE637_TEMPS_DEPASSE;
   \   000015   90....       MOV     DPTR,#serviceProtocole637 + 37
   \   000018   7401         MOV     A,#0x1
   \   00001A   F0           MOVX    @DPTR,A
    206              serviceProtocole637.information = INFORMATION_DISPONIBLE;
   \   00001B   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   00001E   7401         MOV     A,#0x1
   \   000020   F0           MOVX    @DPTR,A
    207              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    208                  serviceProtocole637_attendUnDebut;
   \   000021   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000024   74..         MOV     A,#??serviceProtocole637_attendUnDebut & 0xff
   \   000026   F0           MOVX    @DPTR,A
   \   000027   A3           INC     DPTR
   \   000028   74..         MOV     A,#(??serviceProtocole637_attendUnDebut >> 8) & 0xff
   \   00002A   F0           MOVX    @DPTR,A
    209            }
    210            if (serviceProtocole637_gereUneReception() == SERVICEPROTOCOLE637_LECTURE_PAS_DISPONIBLE)
   \                     ??serviceProtocole637_attendLaLongueur_2:
   \   00002B                ; Setup parameters for call to function serviceProtocole637_gereUneReception()
   \   00002B   12....       LCALL   ??serviceProtocole637_gereUneReception
   \   00002E   E9           MOV     A,R1
   \   00002F   6067         JZ      ??serviceProtocole637_attendLaLongueur_1
    211            {
    212              return;
    213            }
    214          #ifdef SERVICEPROTOCOLE637_DEBUG  
    215            piloteUART0_transmet(serviceProtocole637_reception);      
   \   000031                ; Setup parameters for call to function piloteUART0_transmet(unsigned char)
   \   000031   90....       MOV     DPTR,#serviceProtocole637_reception
   \   000034   E0           MOVX    A,@DPTR
   \   000035   F9           MOV     R1,A
   \   000036   12....       LCALL   ??piloteUART0_transmet
    216          #endif
    217            serviceProtocole637_compteurDeTempsDAttente = 0;
   \   000039   90....       MOV     DPTR,#serviceProtocole637_compteurDeTempsDAttente
   \   00003C   7400         MOV     A,#0x0
   \   00003E   F0           MOVX    @DPTR,A
    218            if (serviceProtocole637_reception == 0x00)
   \   00003F   90....       MOV     DPTR,#serviceProtocole637_reception
   \   000042   E0           MOVX    A,@DPTR
   \   000043   7016         JNZ     ??serviceProtocole637_attendLaLongueur_3
    219            {
    220              serviceProtocole637.statut = SERVICEPROTOCOLE637_ERREUR_LONGUEUR_NULLE;
   \   000045   90....       MOV     DPTR,#serviceProtocole637 + 37
   \   000048   7403         MOV     A,#0x3
   \   00004A   F0           MOVX    @DPTR,A
    221              serviceProtocole637.information = INFORMATION_DISPONIBLE;
   \   00004B   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   00004E   7401         MOV     A,#0x1
   \   000050   F0           MOVX    @DPTR,A
    222              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    223                  serviceProtocole637_attendUnDebut;
   \   000051   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000054   74..         MOV     A,#??serviceProtocole637_attendUnDebut & 0xff
   \   000056   F0           MOVX    @DPTR,A
   \   000057   A3           INC     DPTR
   \   000058   74..         MOV     A,#(??serviceProtocole637_attendUnDebut >> 8) & 0xff
   \   00005A   F0           MOVX    @DPTR,A
    224            }
    225            if (serviceProtocole637_reception > SERVICEPROTOCOLE637_NOMBRE_DE_DONNEES_MAXIMUM)
   \                     ??serviceProtocole637_attendLaLongueur_3:
   \   00005B   90....       MOV     DPTR,#serviceProtocole637_reception
   \   00005E   E0           MOVX    A,@DPTR
   \   00005F   C3           CLR     C
   \   000060   9411         SUBB    A,#0x11
   \   000062   4016         JC      ??serviceProtocole637_attendLaLongueur_4
    226            {
    227              serviceProtocole637.statut = SERVICEPROTOCOLE637_ERREUR_LONGUEUR_TROP_GRANDE;
   \   000064   90....       MOV     DPTR,#serviceProtocole637 + 37
   \   000067   7404         MOV     A,#0x4
   \   000069   F0           MOVX    @DPTR,A
    228              serviceProtocole637.information = INFORMATION_DISPONIBLE;
   \   00006A   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   00006D   7401         MOV     A,#0x1
   \   00006F   F0           MOVX    @DPTR,A
    229              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    230                  serviceProtocole637_attendUnDebut;
   \   000070   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000073   74..         MOV     A,#??serviceProtocole637_attendUnDebut & 0xff
   \   000075   F0           MOVX    @DPTR,A
   \   000076   A3           INC     DPTR
   \   000077   74..         MOV     A,#(??serviceProtocole637_attendUnDebut >> 8) & 0xff
   \   000079   F0           MOVX    @DPTR,A
    231            }
    232            serviceProtocole637.nombreARecevoir = serviceProtocole637_reception;
   \                     ??serviceProtocole637_attendLaLongueur_4:
   \   00007A   90....       MOV     DPTR,#serviceProtocole637_reception
   \   00007D   E0           MOVX    A,@DPTR
   \   00007E   90....       MOV     DPTR,#serviceProtocole637 + 36
   \   000081   F0           MOVX    @DPTR,A
    233            serviceProtocole637_compteurDeReceptions = 0;
   \   000082   90....       MOV     DPTR,#serviceProtocole637_compteurDeReceptions
   \   000085   7400         MOV     A,#0x0
   \   000087   F0           MOVX    @DPTR,A
    234            serviceProtocole637_checksum = 0;
   \   000088   90....       MOV     DPTR,#serviceProtocole637_checksum
   \   00008B   7400         MOV     A,#0x0
   \   00008D   F0           MOVX    @DPTR,A
    235            serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    236                serviceProtocole637_attendUneDonnee;
   \   00008E   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000091   74..         MOV     A,#??serviceProtocole637_attendUneDonnee & 0xff
   \   000093   F0           MOVX    @DPTR,A
   \   000094   A3           INC     DPTR
   \   000095   74..         MOV     A,#(??serviceProtocole637_attendUneDonnee >> 8) & 0xff
   \   000097   F0           MOVX    @DPTR,A
    237          }
   \                     ??serviceProtocole637_attendLaLongueur_1:
   \   000098   D083         POP     DPH
   \   00009A   D082         POP     DPL
   \   00009C   22           RET
    238          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    239          void serviceProtocole637_attendUneDonnee(void)
   \                     ??serviceProtocole637_attendUneDonnee:
    240          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    241            if (serviceProtocole637_gereLaSynchronisationDesReceptions()
    242                == SERVICEPROTOCOLE637_RECEPTION_RETARDEE)
   \   000004                ; Setup parameters for call to function serviceProtocole637_gereLaSynchronisationDesReceptions()
   \   000004   12....       LCALL   ??serviceProtocole637_gereLaSynchronisationDesR
   \   000007   E9           MOV     A,R1
   \   000008   7003         JNZ     $+5
   \   00000A   02....       LJMP    ??serviceProtocole637_attendUneDonnee_1
    243            {
    244              return;
    245            }
    246            if (serviceProtocole637_gereLeTempsDAttente()
    247                == SERVICEPROTOCOLE637_TEMPS_DEPASSE)
   \   00000D                ; Setup parameters for call to function serviceProtocole637_gereLeTempsDAttente()
   \   00000D   12....       LCALL   ??serviceProtocole637_gereLeTempsDAttente
   \   000010   E9           MOV     A,R1
   \   000011   6401         XRL     A,#0x1
   \   000013   7018         JNZ     ??serviceProtocole637_attendUneDonnee_2
    248            {
    249              serviceProtocole637.statut = SERVICEPROTOCOLE637_TEMPS_DEPASSE;
   \   000015   90....       MOV     DPTR,#serviceProtocole637 + 37
   \   000018   7401         MOV     A,#0x1
   \   00001A   F0           MOVX    @DPTR,A
    250              serviceProtocole637.information = INFORMATION_DISPONIBLE;
   \   00001B   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   00001E   7401         MOV     A,#0x1
   \   000020   F0           MOVX    @DPTR,A
    251              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    252                  serviceProtocole637_attendUnDebut;
   \   000021   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000024   74..         MOV     A,#??serviceProtocole637_attendUnDebut & 0xff
   \   000026   F0           MOVX    @DPTR,A
   \   000027   A3           INC     DPTR
   \   000028   74..         MOV     A,#(??serviceProtocole637_attendUnDebut >> 8) & 0xff
   \   00002A   F0           MOVX    @DPTR,A
    253              return;
   \   00002B   806A         SJMP    ??serviceProtocole637_attendUneDonnee_1
    254            }
    255            if (serviceProtocole637_gereUneReception() == SERVICEPROTOCOLE637_LECTURE_PAS_DISPONIBLE)
   \                     ??serviceProtocole637_attendUneDonnee_2:
   \   00002D                ; Setup parameters for call to function serviceProtocole637_gereUneReception()
   \   00002D   12....       LCALL   ??serviceProtocole637_gereUneReception
   \   000030   E9           MOV     A,R1
   \   000031   6064         JZ      ??serviceProtocole637_attendUneDonnee_1
    256            {
    257              return;
    258            }
    259          #ifdef SERVICEPROTOCOLE637_DEBUG  
    260            piloteUART0_transmet(serviceProtocole637_reception);      
   \   000033                ; Setup parameters for call to function piloteUART0_transmet(unsigned char)
   \   000033   90....       MOV     DPTR,#serviceProtocole637_reception
   \   000036   E0           MOVX    A,@DPTR
   \   000037   F9           MOV     R1,A
   \   000038   12....       LCALL   ??piloteUART0_transmet
    261          #endif
    262            serviceProtocole637_compteurDeTempsDAttente = 0;
   \   00003B   90....       MOV     DPTR,#serviceProtocole637_compteurDeTempsDAttente
   \   00003E   7400         MOV     A,#0x0
   \   000040   F0           MOVX    @DPTR,A
    263            serviceProtocole637.octetsRecus[serviceProtocole637_compteurDeReceptions]
    264                = serviceProtocole637_reception;
   \   000041   90....       MOV     DPTR,#serviceProtocole637_reception
   \   000044   E0           MOVX    A,@DPTR
   \   000045   C0E0         PUSH    A
   \   000047   90....       MOV     DPTR,#serviceProtocole637_compteurDeReceptions
   \   00004A   E0           MOVX    A,@DPTR
   \   00004B   F8           MOV     R0,A
   \   00004C   7900         MOV     R1,#0x0
   \   00004E   74..         MOV     A,#(serviceProtocole637 + 2) & 0xff
   \   000050   28           ADD     A,R0
   \   000051   F582         MOV     DPL,A
   \   000053   74..         MOV     A,#((serviceProtocole637 + 2) >> 8) & 0xff
   \   000055   39           ADDC    A,R1
   \   000056   F583         MOV     DPH,A
   \   000058   D0E0         POP     A
   \   00005A   F0           MOVX    @DPTR,A
    265            serviceProtocole637_checksum += serviceProtocole637_reception;
   \   00005B   90....       MOV     DPTR,#serviceProtocole637_reception
   \   00005E   E0           MOVX    A,@DPTR
   \   00005F   F8           MOV     R0,A
   \   000060   90....       MOV     DPTR,#serviceProtocole637_checksum
   \   000063   E0           MOVX    A,@DPTR
   \   000064   28           ADD     A,R0
   \   000065   F0           MOVX    @DPTR,A
    266            serviceProtocole637_compteurDeReceptions++;
   \   000066   90....       MOV     DPTR,#serviceProtocole637_compteurDeReceptions
   \   000069   E0           MOVX    A,@DPTR
   \   00006A   2401         ADD     A,#0x1
   \   00006C   F0           MOVX    @DPTR,A
    267            if (serviceProtocole637_reception == SERVICEPROTOCOLE637_DEBUT_DE_TRAME)
   \   00006D   90....       MOV     DPTR,#serviceProtocole637_reception
   \   000070   E0           MOVX    A,@DPTR
   \   000071   6424         XRL     A,#0x24
   \   000073   700C         JNZ     ??serviceProtocole637_attendUneDonnee_3
    268            {
    269              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    270                  serviceProtocole637_attendUnZero;
   \   000075   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000078   74..         MOV     A,#??serviceProtocole637_attendUnZero & 0xff
   \   00007A   F0           MOVX    @DPTR,A
   \   00007B   A3           INC     DPTR
   \   00007C   74..         MOV     A,#(??serviceProtocole637_attendUnZero >> 8) & 0xff
   \   00007E   F0           MOVX    @DPTR,A
    271              return;
   \   00007F   8016         SJMP    ??serviceProtocole637_attendUneDonnee_1
    272            }
    273            if (serviceProtocole637_compteurDeReceptions == serviceProtocole637.nombreARecevoir)
   \                     ??serviceProtocole637_attendUneDonnee_3:
   \   000081   90....       MOV     DPTR,#serviceProtocole637_compteurDeReceptions
   \   000084   E0           MOVX    A,@DPTR
   \   000085   F8           MOV     R0,A
   \   000086   90....       MOV     DPTR,#serviceProtocole637 + 36
   \   000089   E0           MOVX    A,@DPTR
   \   00008A   68           XRL     A,R0
   \   00008B   700A         JNZ     ??serviceProtocole637_attendUneDonnee_1
    274            {
    275              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    276                  serviceProtocole637_attendUnChecksum;
   \   00008D   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000090   74..         MOV     A,#??serviceProtocole637_attendUnChecksum & 0xff
   \   000092   F0           MOVX    @DPTR,A
   \   000093   A3           INC     DPTR
   \   000094   74..         MOV     A,#(??serviceProtocole637_attendUnChecksum >> 8) & 0xff
   \   000096   F0           MOVX    @DPTR,A
    277              return;
    278            }
    279          }
   \                     ??serviceProtocole637_attendUneDonnee_1:
   \   000097   D083         POP     DPH
   \   000099   D082         POP     DPL
   \   00009B   22           RET
    280          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    281          void serviceProtocole637_attendUnZero(void)
   \                     ??serviceProtocole637_attendUnZero:
    282          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    283            if (serviceProtocole637_gereLaSynchronisationDesReceptions()
    284                == SERVICEPROTOCOLE637_RECEPTION_RETARDEE)
   \   000004                ; Setup parameters for call to function serviceProtocole637_gereLaSynchronisationDesReceptions()
   \   000004   12....       LCALL   ??serviceProtocole637_gereLaSynchronisationDesR
   \   000007   E9           MOV     A,R1
   \   000008   6078         JZ      ??serviceProtocole637_attendUnZero_1
    285            {
    286              return;
    287            }
    288            if (serviceProtocole637_gereLeTempsDAttente()
    289                == SERVICEPROTOCOLE637_TEMPS_DEPASSE)
   \   00000A                ; Setup parameters for call to function serviceProtocole637_gereLeTempsDAttente()
   \   00000A   12....       LCALL   ??serviceProtocole637_gereLeTempsDAttente
   \   00000D   E9           MOV     A,R1
   \   00000E   6401         XRL     A,#0x1
   \   000010   7018         JNZ     ??serviceProtocole637_attendUnZero_2
    290            {
    291              serviceProtocole637.statut = SERVICEPROTOCOLE637_TEMPS_DEPASSE;
   \   000012   90....       MOV     DPTR,#serviceProtocole637 + 37
   \   000015   7401         MOV     A,#0x1
   \   000017   F0           MOVX    @DPTR,A
    292              serviceProtocole637.information = INFORMATION_DISPONIBLE;
   \   000018   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   00001B   7401         MOV     A,#0x1
   \   00001D   F0           MOVX    @DPTR,A
    293              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    294                  serviceProtocole637_attendUnDebut;
   \   00001E   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000021   74..         MOV     A,#??serviceProtocole637_attendUnDebut & 0xff
   \   000023   F0           MOVX    @DPTR,A
   \   000024   A3           INC     DPTR
   \   000025   74..         MOV     A,#(??serviceProtocole637_attendUnDebut >> 8) & 0xff
   \   000027   F0           MOVX    @DPTR,A
    295              return;
   \   000028   8058         SJMP    ??serviceProtocole637_attendUnZero_1
    296            }
    297            if (serviceProtocole637_gereUneReception() == SERVICEPROTOCOLE637_LECTURE_PAS_DISPONIBLE)
   \                     ??serviceProtocole637_attendUnZero_2:
   \   00002A                ; Setup parameters for call to function serviceProtocole637_gereUneReception()
   \   00002A   12....       LCALL   ??serviceProtocole637_gereUneReception
   \   00002D   E9           MOV     A,R1
   \   00002E   6052         JZ      ??serviceProtocole637_attendUnZero_1
    298            {
    299              return;
    300            }
    301          #ifdef SERVICEPROTOCOLE637_DEBUG  
    302            piloteUART0_transmet(serviceProtocole637_reception);      
   \   000030                ; Setup parameters for call to function piloteUART0_transmet(unsigned char)
   \   000030   90....       MOV     DPTR,#serviceProtocole637_reception
   \   000033   E0           MOVX    A,@DPTR
   \   000034   F9           MOV     R1,A
   \   000035   12....       LCALL   ??piloteUART0_transmet
    303          #endif
    304            serviceProtocole637_compteurDeTempsDAttente = 0;
   \   000038   90....       MOV     DPTR,#serviceProtocole637_compteurDeTempsDAttente
   \   00003B   7400         MOV     A,#0x0
   \   00003D   F0           MOVX    @DPTR,A
    305            if (serviceProtocole637_reception > 0x00)
   \   00003E   90....       MOV     DPTR,#serviceProtocole637_reception
   \   000041   E0           MOVX    A,@DPTR
   \   000042   C3           CLR     C
   \   000043   9401         SUBB    A,#0x1
   \   000045   4018         JC      ??serviceProtocole637_attendUnZero_3
    306            {
    307              serviceProtocole637.statut = SERVICEPROTOCOLE637_ERREUR_INSERTION_NON_NULLE;
   \   000047   90....       MOV     DPTR,#serviceProtocole637 + 37
   \   00004A   7405         MOV     A,#0x5
   \   00004C   F0           MOVX    @DPTR,A
    308              serviceProtocole637.information = INFORMATION_DISPONIBLE; 
   \   00004D   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   000050   7401         MOV     A,#0x1
   \   000052   F0           MOVX    @DPTR,A
    309              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    310                  serviceProtocole637_attendUnDebut;
   \   000053   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000056   74..         MOV     A,#??serviceProtocole637_attendUnDebut & 0xff
   \   000058   F0           MOVX    @DPTR,A
   \   000059   A3           INC     DPTR
   \   00005A   74..         MOV     A,#(??serviceProtocole637_attendUnDebut >> 8) & 0xff
   \   00005C   F0           MOVX    @DPTR,A
    311              return;
   \   00005D   8023         SJMP    ??serviceProtocole637_attendUnZero_1
    312            }
    313            if (serviceProtocole637_compteurDeReceptions < serviceProtocole637.nombreARecevoir)
   \                     ??serviceProtocole637_attendUnZero_3:
   \   00005F   90....       MOV     DPTR,#serviceProtocole637 + 36
   \   000062   E0           MOVX    A,@DPTR
   \   000063   F8           MOV     R0,A
   \   000064   90....       MOV     DPTR,#serviceProtocole637_compteurDeReceptions
   \   000067   E0           MOVX    A,@DPTR
   \   000068   C3           CLR     C
   \   000069   98           SUBB    A,R0
   \   00006A   500C         JNC     ??serviceProtocole637_attendUnZero_4
    314            {
    315              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    316                  serviceProtocole637_attendUneDonnee;
   \   00006C   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   00006F   74..         MOV     A,#??serviceProtocole637_attendUneDonnee & 0xff
   \   000071   F0           MOVX    @DPTR,A
   \   000072   A3           INC     DPTR
   \   000073   74..         MOV     A,#(??serviceProtocole637_attendUneDonnee >> 8) & 0xff
   \   000075   F0           MOVX    @DPTR,A
    317              return;
   \   000076   800A         SJMP    ??serviceProtocole637_attendUnZero_1
    318            }
    319            serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    320                serviceProtocole637_attendUnChecksum;
   \                     ??serviceProtocole637_attendUnZero_4:
   \   000078   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   00007B   74..         MOV     A,#??serviceProtocole637_attendUnChecksum & 0xff
   \   00007D   F0           MOVX    @DPTR,A
   \   00007E   A3           INC     DPTR
   \   00007F   74..         MOV     A,#(??serviceProtocole637_attendUnChecksum >> 8) & 0xff
   \   000081   F0           MOVX    @DPTR,A
    321          }    
   \                     ??serviceProtocole637_attendUnZero_1:
   \   000082   D083         POP     DPH
   \   000084   D082         POP     DPL
   \   000086   22           RET
    322          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    323          void serviceProtocole637_attendUnChecksum(void)
   \                     ??serviceProtocole637_attendUnChecksum:
    324          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    325           if (serviceProtocole637_gereLaSynchronisationDesReceptions()
    326                == SERVICEPROTOCOLE637_RECEPTION_RETARDEE)
   \   000004                ; Setup parameters for call to function serviceProtocole637_gereLaSynchronisationDesReceptions()
   \   000004   12....       LCALL   ??serviceProtocole637_gereLaSynchronisationDesR
   \   000007   E9           MOV     A,R1
   \   000008   606E         JZ      ??serviceProtocole637_attendUnChecksum_1
    327            {
    328              return;
    329            }
    330            if (serviceProtocole637_gereLeTempsDAttente()
    331                == SERVICEPROTOCOLE637_TEMPS_DEPASSE)
   \   00000A                ; Setup parameters for call to function serviceProtocole637_gereLeTempsDAttente()
   \   00000A   12....       LCALL   ??serviceProtocole637_gereLeTempsDAttente
   \   00000D   E9           MOV     A,R1
   \   00000E   6401         XRL     A,#0x1
   \   000010   7018         JNZ     ??serviceProtocole637_attendUnChecksum_2
    332            {
    333              serviceProtocole637.statut = SERVICEPROTOCOLE637_TEMPS_DEPASSE;
   \   000012   90....       MOV     DPTR,#serviceProtocole637 + 37
   \   000015   7401         MOV     A,#0x1
   \   000017   F0           MOVX    @DPTR,A
    334              serviceProtocole637.information = INFORMATION_DISPONIBLE;
   \   000018   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   00001B   7401         MOV     A,#0x1
   \   00001D   F0           MOVX    @DPTR,A
    335              serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    336                  serviceProtocole637_attendUnDebut;
   \   00001E   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000021   74..         MOV     A,#??serviceProtocole637_attendUnDebut & 0xff
   \   000023   F0           MOVX    @DPTR,A
   \   000024   A3           INC     DPTR
   \   000025   74..         MOV     A,#(??serviceProtocole637_attendUnDebut >> 8) & 0xff
   \   000027   F0           MOVX    @DPTR,A
    337              return;
   \   000028   804E         SJMP    ??serviceProtocole637_attendUnChecksum_1
    338            }
    339            if (serviceProtocole637_gereUneReception() == SERVICEPROTOCOLE637_LECTURE_PAS_DISPONIBLE)
   \                     ??serviceProtocole637_attendUnChecksum_2:
   \   00002A                ; Setup parameters for call to function serviceProtocole637_gereUneReception()
   \   00002A   12....       LCALL   ??serviceProtocole637_gereUneReception
   \   00002D   E9           MOV     A,R1
   \   00002E   6048         JZ      ??serviceProtocole637_attendUnChecksum_1
    340            {
    341                return;
    342            }
    343          #ifdef SERVICEPROTOCOLE637_DEBUG  
    344            piloteUART0_transmet(serviceProtocole637_reception);      
   \   000030                ; Setup parameters for call to function piloteUART0_transmet(unsigned char)
   \   000030   90....       MOV     DPTR,#serviceProtocole637_reception
   \   000033   E0           MOVX    A,@DPTR
   \   000034   F9           MOV     R1,A
   \   000035   12....       LCALL   ??piloteUART0_transmet
    345          #endif
    346            serviceProtocole637_compteurDeTempsDAttente = 0;
   \   000038   90....       MOV     DPTR,#serviceProtocole637_compteurDeTempsDAttente
   \   00003B   7400         MOV     A,#0x0
   \   00003D   F0           MOVX    @DPTR,A
    347            if (serviceProtocole637_reception == serviceProtocole637_checksum)
   \   00003E   90....       MOV     DPTR,#serviceProtocole637_reception
   \   000041   E0           MOVX    A,@DPTR
   \   000042   F8           MOV     R0,A
   \   000043   90....       MOV     DPTR,#serviceProtocole637_checksum
   \   000046   E0           MOVX    A,@DPTR
   \   000047   68           XRL     A,R0
   \   000048   7018         JNZ     ??serviceProtocole637_attendUnChecksum_3
    348            {
    349              serviceProtocole637.statut = SERVICEPROTOCOLE637_PAS_D_ERREURS;
   \   00004A   90....       MOV     DPTR,#serviceProtocole637 + 37
   \   00004D   7400         MOV     A,#0x0
   \   00004F   F0           MOVX    @DPTR,A
    350              serviceProtocole637.information = INFORMATION_DISPONIBLE;
   \   000050   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   000053   7401         MOV     A,#0x1
   \   000055   F0           MOVX    @DPTR,A
    351             serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    352                  serviceProtocole637_attendUnDebut;      
   \   000056   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000059   74..         MOV     A,#??serviceProtocole637_attendUnDebut & 0xff
   \   00005B   F0           MOVX    @DPTR,A
   \   00005C   A3           INC     DPTR
   \   00005D   74..         MOV     A,#(??serviceProtocole637_attendUnDebut >> 8) & 0xff
   \   00005F   F0           MOVX    @DPTR,A
    353              return;
   \   000060   8016         SJMP    ??serviceProtocole637_attendUnChecksum_1
    354            }
    355            serviceProtocole637.statut = SERVICEPROTOCOLE637_ERREUR_MAUVAIS_CHECKSUM;
   \                     ??serviceProtocole637_attendUnChecksum_3:
   \   000062   90....       MOV     DPTR,#serviceProtocole637 + 37
   \   000065   7406         MOV     A,#0x6
   \   000067   F0           MOVX    @DPTR,A
    356            serviceProtocole637.information = INFORMATION_DISPONIBLE;
   \   000068   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   00006B   7401         MOV     A,#0x1
   \   00006D   F0           MOVX    @DPTR,A
    357             serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    358                  serviceProtocole637_attendUnDebut;      
   \   00006E   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   000071   74..         MOV     A,#??serviceProtocole637_attendUnDebut & 0xff
   \   000073   F0           MOVX    @DPTR,A
   \   000074   A3           INC     DPTR
   \   000075   74..         MOV     A,#(??serviceProtocole637_attendUnDebut >> 8) & 0xff
   \   000077   F0           MOVX    @DPTR,A
    359          }
   \                     ??serviceProtocole637_attendUnChecksum_1:
   \   000078   D083         POP     DPH
   \   00007A   D082         POP     DPL
   \   00007C   22           RET
    360          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    361          unsigned char serviceProtocole637_gereLaSynchronisationDesReceptions(void)
   \                     ??serviceProtocole637_gereLaSynchronisationDesR:
    362          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    363            serviceProtocole637_compteurDeSynchronisationDesReceptions++;
   \   000004   90....       MOV     DPTR,#serviceProtocole637_compteurDeSynchronisationDesReceptions
   \   000007   E0           MOVX    A,@DPTR
   \   000008   2401         ADD     A,#0x1
   \   00000A   F0           MOVX    @DPTR,A
    364            if (serviceProtocole637_compteurDeSynchronisationDesReceptions <
    365                SERVICEPROTOCOLE637_COMPTE_MAXIMAL_DE_SYNCHRONISATION_EN_RECEPTION)
   \   00000B   90....       MOV     DPTR,#serviceProtocole637_compteurDeSynchronisationDesReceptions
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   C3           CLR     C
   \   000010   9401         SUBB    A,#0x1
   \   000012   5004         JNC     ??serviceProtocole637_gereLaSynchronisationDesR_1
    366            {
    367              return SERVICEPROTOCOLE637_RECEPTION_RETARDEE;
   \   000014   7900         MOV     R1,#0x0
   \   000016   8008         SJMP    ??serviceProtocole637_gereLaSynchronisationDesR_2
    368            }
    369            serviceProtocole637_compteurDeSynchronisationDesReceptions = 0;
   \                     ??serviceProtocole637_gereLaSynchronisationDesR_1:
   \   000018   90....       MOV     DPTR,#serviceProtocole637_compteurDeSynchronisationDesReceptions
   \   00001B   7400         MOV     A,#0x0
   \   00001D   F0           MOVX    @DPTR,A
    370            return SERVICEPROTOCOLE637_RECEPTION_PERMISE;
   \   00001E   7901         MOV     R1,#0x1
   \                     ??serviceProtocole637_gereLaSynchronisationDesR_2:
   \   000020   D083         POP     DPH
   \   000022   D082         POP     DPL
   \   000024   22           RET
    371          }
    372          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    373          unsigned char serviceProtocole637_gereLeTempsDAttente(void)
   \                     ??serviceProtocole637_gereLeTempsDAttente:
    374          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    375            serviceProtocole637_compteurDeTempsDAttente++;
   \   000004   90....       MOV     DPTR,#serviceProtocole637_compteurDeTempsDAttente
   \   000007   E0           MOVX    A,@DPTR
   \   000008   2401         ADD     A,#0x1
   \   00000A   F0           MOVX    @DPTR,A
    376            if (serviceProtocole637_compteurDeTempsDAttente <
    377                SERVICEPROTOCOLE637_COMPTE_MAXIMAL_ENTRE_LES_RECEPTIONS)
   \   00000B   90....       MOV     DPTR,#serviceProtocole637_compteurDeTempsDAttente
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   C3           CLR     C
   \   000010   9408         SUBB    A,#0x8
   \   000012   5004         JNC     ??serviceProtocole637_gereLeTempsDAttente_1
    378            {
    379              return SERVICEPROTOCOLE637_TEMPS_PAS_DEPASSE; 
   \   000014   7900         MOV     R1,#0x0
   \   000016   8002         SJMP    ??serviceProtocole637_gereLeTempsDAttente_2
    380            }
    381            return SERVICEPROTOCOLE637_TEMPS_DEPASSE;
   \                     ??serviceProtocole637_gereLeTempsDAttente_1:
   \   000018   7901         MOV     R1,#0x1
   \                     ??serviceProtocole637_gereLeTempsDAttente_2:
   \   00001A   D083         POP     DPH
   \   00001C   D082         POP     DPL
   \   00001E   22           RET
    382          }
    383          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    384          unsigned char serviceProtocole637_gereUneReception(void)
   \                     ??serviceProtocole637_gereUneReception:
    385          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    386            if (piloteUART1_octetDisponible() == PILOTEUART1_PAS_DISPONIBLE)
   \   000004                ; Setup parameters for call to function piloteUART1_octetDisponible()
   \   000004   12....       LCALL   ??piloteUART1_octetDisponible
   \   000007   E9           MOV     A,R1
   \   000008   7004         JNZ     ??serviceProtocole637_gereUneReception_1
    387            {
    388              return SERVICEPROTOCOLE637_LECTURE_PAS_DISPONIBLE;
   \   00000A   7900         MOV     R1,#0x0
   \   00000C   800D         SJMP    ??serviceProtocole637_gereUneReception_2
    389            }
    390            serviceProtocole637_reception = piloteUART1_litUnOctetRecu();
   \                     ??serviceProtocole637_gereUneReception_1:
   \   00000E                ; Setup parameters for call to function piloteUART1_litUnOctetRecu()
   \   00000E   12....       LCALL   ??piloteUART1_litUnOctetRecu
   \   000011   E9           MOV     A,R1
   \   000012   90....       MOV     DPTR,#serviceProtocole637_reception
   \   000015   F0           MOVX    @DPTR,A
    391            piloteUART1_confirmeLaReception();
   \   000016                ; Setup parameters for call to function piloteUART1_confirmeLaReception()
   \   000016   12....       LCALL   ??piloteUART1_confirmeLaReception
    392            return SERVICEPROTOCOLE637_LECTURE_DISPONIBLE;
   \   000019   7901         MOV     R1,#0x1
   \                     ??serviceProtocole637_gereUneReception_2:
   \   00001B   D083         POP     DPH
   \   00001D   D082         POP     DPL
   \   00001F   22           RET
    393          }
    394          
    395          //Definitions de variables publiques:

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    396          SERVICEPROTOCOLE637 serviceProtocole637;
   \                     serviceProtocole637:
   \   000000                DS 38
   \   000026                REQUIRE __INIT_XDATA_Z
    397          
    398          //Definitions de fonctions publiques:

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    399          void serviceProtocole637_initialise(void)
   \                     ??serviceProtocole637_initialise:
    400          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    401            serviceProtocole637.etatDuModuleDeReception = MODULE_PAS_EN_FONCTION;
   \   000004   90....       MOV     DPTR,#serviceProtocole637
   \   000007   7400         MOV     A,#0x0
   \   000009   F0           MOVX    @DPTR,A
    402            serviceProtocole637.information = INFORMATION_TRAITEE;
   \   00000A   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   00000D   7400         MOV     A,#0x0
   \   00000F   F0           MOVX    @DPTR,A
    403            serviceProtocole637_compteurDeSynchronisationDesTransmissions = 0;
   \   000010   90....       MOV     DPTR,#serviceProtocole637_compteurDeSynchronisationDesTransmissions
   \   000013   7400         MOV     A,#0x0
   \   000015   F0           MOVX    @DPTR,A
    404            serviceProtocole637.requete = REQUETE_TRAITEE;
   \   000016   90....       MOV     DPTR,#serviceProtocole637 + 18
   \   000019   7400         MOV     A,#0x0
   \   00001B   F0           MOVX    @DPTR,A
    405            serviceProtocole637_compteurDeSynchronisationDesReceptions = 0;
   \   00001C   90....       MOV     DPTR,#serviceProtocole637_compteurDeSynchronisationDesReceptions
   \   00001F   7400         MOV     A,#0x0
   \   000021   F0           MOVX    @DPTR,A
    406            serviceProtocole637.information = INFORMATION_TRAITEE;
   \   000022   90....       MOV     DPTR,#serviceProtocole637 + 1
   \   000025   7400         MOV     A,#0x0
   \   000027   F0           MOVX    @DPTR,A
    407            serviceProtocole637.statut = SERVICEPROTOCOLE637_PAS_D_ERREURS;
   \   000028   90....       MOV     DPTR,#serviceProtocole637 + 37
   \   00002B   7400         MOV     A,#0x0
   \   00002D   F0           MOVX    @DPTR,A
    408            serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_TRANSMISSION] =
    409                serviceProtocole637_attendUneRequete;
   \   00002E   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 6
   \   000031   74..         MOV     A,#??serviceProtocole637_attendUneRequete & 0xff
   \   000033   F0           MOVX    @DPTR,A
   \   000034   A3           INC     DPTR
   \   000035   74..         MOV     A,#(??serviceProtocole637_attendUneRequete >> 8) & 0xff
   \   000037   F0           MOVX    @DPTR,A
    410            serviceBaseDeTemps_execute[SERVICEPROTOCOLE637_PHASE_RECEPTION] =
    411                serviceProtocole637_attendUnDebut;
   \   000038   90....       MOV     DPTR,#serviceBaseDeTemps_execute + 2
   \   00003B   74..         MOV     A,#??serviceProtocole637_attendUnDebut & 0xff
   \   00003D   F0           MOVX    @DPTR,A
   \   00003E   A3           INC     DPTR
   \   00003F   74..         MOV     A,#(??serviceProtocole637_attendUnDebut >> 8) & 0xff
   \   000041   F0           MOVX    @DPTR,A
    412          }
   \   000042   D083         POP     DPH
   \   000044   D082         POP     DPL
   \   000046   22           RET

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       2      0      0  serviceProtocole637_attendLaLongueur()
                          2 0 0 -> piloteUART0_transmet(unsigned char)
                          2 0 0 -> serviceProtocole637_gereLaSynchronisationDesReceptions()
                          2 0 0 -> serviceProtocole637_gereLeTempsDAttente()
                          2 0 0 -> serviceProtocole637_gereUneReception()
       2      0      0  serviceProtocole637_attendUnChecksum()
                          2 0 0 -> piloteUART0_transmet(unsigned char)
                          2 0 0 -> serviceProtocole637_gereLaSynchronisationDesReceptions()
                          2 0 0 -> serviceProtocole637_gereLeTempsDAttente()
                          2 0 0 -> serviceProtocole637_gereUneReception()
       2      0      0  serviceProtocole637_attendUnDebut()
                          2 0 0 -> piloteUART0_transmet(unsigned char)
                          2 0 0 -> serviceProtocole637_gereUneReception()
       2      0      0  serviceProtocole637_attendUnZero()
                          2 0 0 -> piloteUART0_transmet(unsigned char)
                          2 0 0 -> serviceProtocole637_gereLaSynchronisationDesReceptions()
                          2 0 0 -> serviceProtocole637_gereLeTempsDAttente()
                          2 0 0 -> serviceProtocole637_gereUneReception()
       3      0      0  serviceProtocole637_attendUneDonnee()
                          2 0 0 -> piloteUART0_transmet(unsigned char)
                          2 0 0 -> serviceProtocole637_gereLaSynchronisationDesReceptions()
                          2 0 0 -> serviceProtocole637_gereLeTempsDAttente()
                          2 0 0 -> serviceProtocole637_gereUneReception()
       2      0      0  serviceProtocole637_attendUneRequete()
                          2 0 0 -> piloteUART0_transmet(unsigned char)
                          2 0 0 -> piloteUART1_transmet(unsigned char)
                          2 0 0 -> serviceProtocole637_gereLaSynchronisationDesTransmissions()
       2      0      0  serviceProtocole637_gereLaSynchronisationDesReceptions()
       2      0      8  serviceProtocole637_gereLaSynchronisationDesTransmissions()
       2      0      0  serviceProtocole637_gereLeTempsDAttente()
       2      0      0  serviceProtocole637_gereUneReception()
                          2 0 0 -> piloteUART1_confirmeLaReception()
                          2 0 0 -> piloteUART1_litUnOctetRecu()
                          2 0 0 -> piloteUART1_octetDisponible()
       2      0      0  serviceProtocole637_initialise()
       2      0      0  serviceProtocole637_transmetLaLongueur()
                          2 0 0 -> piloteUART0_transmet(unsigned char)
                          2 0 0 -> piloteUART1_transmet(unsigned char)
                          2 0 0 -> serviceProtocole637_gereLaSynchronisationDesTransmissions()
       2      0      0  serviceProtocole637_transmetUnChecksum()
                          2 0 0 -> piloteUART0_transmet(unsigned char)
                          2 0 0 -> piloteUART1_transmet(unsigned char)
                          2 0 0 -> serviceProtocole637_gereLaSynchronisationDesTransmissions()
       2      0      0  serviceProtocole637_transmetUnZero()
                          2 0 0 -> piloteUART0_transmet(unsigned char)
                          2 0 0 -> piloteUART1_transmet(unsigned char)
                          2 0 0 -> serviceProtocole637_gereLaSynchronisationDesTransmissions()
       0      0      8  serviceProtocole637_transmetUneDonnee()
                          0 0 8 -> piloteUART0_transmet(unsigned char)
                          0 0 8 -> piloteUART1_transmet(unsigned char)
                          0 0 8 -> serviceProtocole637_gereLaSynchronisationDesTransmissions()


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      38  serviceProtocole637
     157  serviceProtocole637_attendLaLongueur()
     125  serviceProtocole637_attendUnChecksum()
      61  serviceProtocole637_attendUnDebut()
     135  serviceProtocole637_attendUnZero()
     156  serviceProtocole637_attendUneDonnee()
      41  serviceProtocole637_attendUneRequete()
       1  serviceProtocole637_checksum
       1  serviceProtocole637_checksumDeReception
       1  serviceProtocole637_checksumDeTransmission
       1  serviceProtocole637_compteurDeReceptions
       1  serviceProtocole637_compteurDeSynchronisationDesReceptions
       1  serviceProtocole637_compteurDeSynchronisationDesTransmissions
       1  serviceProtocole637_compteurDeTempsDAttente
       1  serviceProtocole637_compteurDeTransmissions
      37  serviceProtocole637_gereLaSynchronisationDesReceptions()
      37  serviceProtocole637_gereLaSynchronisationDesTransmissions()
      31  serviceProtocole637_gereLeTempsDAttente()
      32  serviceProtocole637_gereUneReception()
      71  serviceProtocole637_initialise()
       1  serviceProtocole637_reception
      53  serviceProtocole637_transmetLaLongueur()
      47  serviceProtocole637_transmetUnChecksum()
      59  serviceProtocole637_transmetUnZero()
      97  serviceProtocole637_transmetUneDonnee()

 
 1 139 bytes in segment NEAR_CODE
    47 bytes in segment XDATA_Z
 
 1 139 bytes of CODE  memory
    47 bytes of XDATA memory

Errors: none
Warnings: none
