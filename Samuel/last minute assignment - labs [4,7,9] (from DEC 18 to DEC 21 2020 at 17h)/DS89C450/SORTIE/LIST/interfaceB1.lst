###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             28/Oct/2019  04:35:49 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  C:\Users\yves.roy\Sync\2019-08                     #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\SOURCE\interfaceB1.c                       #
#    Command line       =  "C:\Users\yves.roy\Sync\2019-08                    #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\SOURCE\interfaceB1.c" -D                   #
#                          OPTION_COMPILE_AVEC_IAR -lCN                       #
#                          "C:\Users\yves.roy\Sync\2019-08                    #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\LIST\" -lb                #
#                          "C:\Users\yves.roy\Sync\2019-08                    #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\LIST\" -o                 #
#                          "C:\Users\yves.roy\Sync\2019-08                    #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\OBJ\" -e --no_cse         #
#                          --no_unroll --no_inline --no_code_motion           #
#                          --no_tbaa --debug --core=plain --dptr=16,1         #
#                          --data_model=large --code_model=near               #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data --nr_virtual_regs 8         #
#                          --dlib_config "C:\Program Files (x86)\IAR          #
#                          Systems\Embedded Workbench                         #
#                          6.4\8051\LIB\DLIB\dl8051Normal.h" -On --eec++      #
#    List file          =  C:\Users\yves.roy\Sync\2019-08                     #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\LIST\interfaceB1.lst      #
#    Object file        =  C:\Users\yves.roy\Sync\2019-08                     #
#                          247-637\LOGICIEL\S-0008\247-637 S-0006             #
#                          college\PROJET\..\SORTIE\OBJ\interfaceB1.r51       #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\yves.roy\Sync\2019-08 247-637\LOGICIEL\S-0008\247-637 S-0006 college\SOURCE\interfaceB1.c
      1          //interfaceB1:
      2          //Historique: 
      3          // 2018-09-24, Yves Roy, creation
      4          
      5          //INCLUSIONS
      6          #include "main.h"
      7          #include "piloteIOB1.h"
      8          #include "serviceBaseDeTemps.h"
      9          #include "interfaceB1.h"
     10          
     11          //Definitions privees
     12          #define INTERFACEB1_COMPTE_MAXIMUM_AVANT_LECTURE  (\
     13            FREQUENCE_DE_LA_BASE_DE_TEMPS_EN_HZ/INTERFACEB1_FREQUENCE_DES_LECTURES_EN_HZ)
     14          #define INTERFACEB1_COMPTE_INITIAL (\
     15            INTERFACEB1_NOMBRE_MINIMUM_DE_LECTURES_PAR_DECISION/2)
     16          
     17          //Declarations de fonctions privees:
     18          void interfaceB1_gere(void);
     19          
     20          //Definitions de variables privees:

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     21          unsigned int compteurAvantLecture;
   \                     compteurAvantLecture:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     22          unsigned int compteurAntiRebond;
   \                     compteurAntiRebond:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
     23          
     24          //Definitions de fonctions privees:

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     25          void interfaceB1_gere(void)
   \                     ??interfaceB1_gere:
     26          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     27            compteurAvantLecture++;
   \   000004   90....       MOV     DPTR,#compteurAvantLecture
   \   000007   E0           MOVX    A,@DPTR
   \   000008   2401         ADD     A,#0x1
   \   00000A   F0           MOVX    @DPTR,A
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   3400         ADDC    A,#0x0
   \   00000F   F0           MOVX    @DPTR,A
     28            if (compteurAvantLecture < INTERFACEB1_COMPTE_MAXIMUM_AVANT_LECTURE)
   \   000010   90....       MOV     DPTR,#compteurAvantLecture
   \   000013   C3           CLR     C
   \   000014   E0           MOVX    A,@DPTR
   \   000015   9414         SUBB    A,#0x14
   \   000017   A3           INC     DPTR
   \   000018   E0           MOVX    A,@DPTR
   \   000019   9400         SUBB    A,#0x0
   \   00001B   5003         JNC     $+5
   \   00001D   02....       LJMP    ??interfaceB1_gere_1
     29            {
     30              return;
     31            }
     32            compteurAvantLecture = 0;
   \   000020   90....       MOV     DPTR,#compteurAvantLecture
   \   000023   7400         MOV     A,#0x0
   \   000025   F0           MOVX    @DPTR,A
   \   000026   A3           INC     DPTR
   \   000027   7400         MOV     A,#0x0
   \   000029   F0           MOVX    @DPTR,A
     33            if (piloteIOB1_litLEntree() == INTERFACEB1_VALEUR_LUE_SI_APPUYE)
   \   00002A                ; Setup parameters for call to function piloteIOB1_litLEntree()
   \   00002A   12....       LCALL   ??piloteIOB1_litLEntree
   \   00002D   E9           MOV     A,R1
   \   00002E   703B         JNZ     ??interfaceB1_gere_2
     34            {
     35              if (compteurAntiRebond == INTERFACEB1_NOMBRE_MINIMUM_DE_LECTURES_PAR_DECISION)
   \   000030   90....       MOV     DPTR,#compteurAntiRebond
   \   000033   E0           MOVX    A,@DPTR
   \   000034   640A         XRL     A,#0xa
   \   000036   7004         JNZ     ??interfaceB1_gere_3
   \   000038   A3           INC     DPTR
   \   000039   E0           MOVX    A,@DPTR
   \   00003A   6400         XRL     A,#0x0
   \                     ??interfaceB1_gere_3:
   \   00003C   6063         JZ      ??interfaceB1_gere_1
     36              {
     37                return;
     38              }
     39              compteurAntiRebond++;
   \   00003E   90....       MOV     DPTR,#compteurAntiRebond
   \   000041   E0           MOVX    A,@DPTR
   \   000042   2401         ADD     A,#0x1
   \   000044   F0           MOVX    @DPTR,A
   \   000045   A3           INC     DPTR
   \   000046   E0           MOVX    A,@DPTR
   \   000047   3400         ADDC    A,#0x0
   \   000049   F0           MOVX    @DPTR,A
     40              if (compteurAntiRebond < INTERFACEB1_NOMBRE_MINIMUM_DE_LECTURES_PAR_DECISION)
   \   00004A   90....       MOV     DPTR,#compteurAntiRebond
   \   00004D   C3           CLR     C
   \   00004E   E0           MOVX    A,@DPTR
   \   00004F   940A         SUBB    A,#0xa
   \   000051   A3           INC     DPTR
   \   000052   E0           MOVX    A,@DPTR
   \   000053   9400         SUBB    A,#0x0
   \   000055   404A         JC      ??interfaceB1_gere_1
     41              {
     42                return;
     43              }    
     44              interfaceB1.etatDuModule = MODULE_EN_FONCTION;
   \   000057   90....       MOV     DPTR,#interfaceB1
   \   00005A   7401         MOV     A,#0x1
   \   00005C   F0           MOVX    @DPTR,A
     45              interfaceB1.etatDuBouton = INTERFACEB1_APPUYE;
   \   00005D   90....       MOV     DPTR,#interfaceB1 + 2
   \   000060   7401         MOV     A,#0x1
   \   000062   F0           MOVX    @DPTR,A
     46              interfaceB1.information = INFORMATION_DISPONIBLE;       
   \   000063   90....       MOV     DPTR,#interfaceB1 + 1
   \   000066   7401         MOV     A,#0x1
   \   000068   F0           MOVX    @DPTR,A
     47              return;
   \   000069   8036         SJMP    ??interfaceB1_gere_1
     48            }
     49            if (compteurAntiRebond == 0)
   \                     ??interfaceB1_gere_2:
   \   00006B   90....       MOV     DPTR,#compteurAntiRebond
   \   00006E   E0           MOVX    A,@DPTR
   \   00006F   F8           MOV     R0,A
   \   000070   A3           INC     DPTR
   \   000071   E0           MOVX    A,@DPTR
   \   000072   F9           MOV     R1,A
   \   000073   E8           MOV     A,R0
   \   000074   49           ORL     A,R1
   \   000075   602A         JZ      ??interfaceB1_gere_1
     50            {
     51              return; 
     52            }
     53            compteurAntiRebond--;
   \   000077   90....       MOV     DPTR,#compteurAntiRebond
   \   00007A   E0           MOVX    A,@DPTR
   \   00007B   24FF         ADD     A,#-0x1
   \   00007D   F0           MOVX    @DPTR,A
   \   00007E   A3           INC     DPTR
   \   00007F   E0           MOVX    A,@DPTR
   \   000080   34FF         ADDC    A,#-0x1
   \   000082   F0           MOVX    @DPTR,A
     54            if (compteurAntiRebond > 0)
   \   000083   90....       MOV     DPTR,#compteurAntiRebond
   \   000086   E0           MOVX    A,@DPTR
   \   000087   F8           MOV     R0,A
   \   000088   A3           INC     DPTR
   \   000089   E0           MOVX    A,@DPTR
   \   00008A   F9           MOV     R1,A
   \   00008B   E8           MOV     A,R0
   \   00008C   49           ORL     A,R1
   \   00008D   7012         JNZ     ??interfaceB1_gere_1
     55            {
     56              return;
     57            }
     58            interfaceB1.etatDuModule = MODULE_EN_FONCTION;  
   \   00008F   90....       MOV     DPTR,#interfaceB1
   \   000092   7401         MOV     A,#0x1
   \   000094   F0           MOVX    @DPTR,A
     59            interfaceB1.etatDuBouton = INTERFACEB1_RELACHE;
   \   000095   90....       MOV     DPTR,#interfaceB1 + 2
   \   000098   7400         MOV     A,#0x0
   \   00009A   F0           MOVX    @DPTR,A
     60            interfaceB1.information = INFORMATION_DISPONIBLE;
   \   00009B   90....       MOV     DPTR,#interfaceB1 + 1
   \   00009E   7401         MOV     A,#0x1
   \   0000A0   F0           MOVX    @DPTR,A
     61          }
   \                     ??interfaceB1_gere_1:
   \   0000A1   D083         POP     DPH
   \   0000A3   D082         POP     DPL
   \   0000A5   22           RET
     62          
     63          //Definitions de variables publiques:

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     64          INTERFACEB1 interfaceB1;
   \                     interfaceB1:
   \   000000                DS 3
   \   000003                REQUIRE __INIT_XDATA_Z
     65          
     66          //Definitions de fonctions publiques:

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     67          void interfaceB1_initialise(void)
   \                     ??interfaceB1_initialise:
     68          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     69            interfaceB1.etatDuModule = MODULE_PAS_EN_FONCTION;
   \   000004   90....       MOV     DPTR,#interfaceB1
   \   000007   7400         MOV     A,#0x0
   \   000009   F0           MOVX    @DPTR,A
     70            interfaceB1.information = INFORMATION_TRAITEE;
   \   00000A   90....       MOV     DPTR,#interfaceB1 + 1
   \   00000D   7400         MOV     A,#0x0
   \   00000F   F0           MOVX    @DPTR,A
     71            interfaceB1.etatDuBouton = INTERFACEB1_INCONNU;
   \   000010   90....       MOV     DPTR,#interfaceB1 + 2
   \   000013   7402         MOV     A,#0x2
   \   000015   F0           MOVX    @DPTR,A
     72            compteurAvantLecture = 0;
   \   000016   90....       MOV     DPTR,#compteurAvantLecture
   \   000019   7400         MOV     A,#0x0
   \   00001B   F0           MOVX    @DPTR,A
   \   00001C   A3           INC     DPTR
   \   00001D   7400         MOV     A,#0x0
   \   00001F   F0           MOVX    @DPTR,A
     73            compteurAntiRebond = INTERFACEB1_COMPTE_INITIAL;
   \   000020   90....       MOV     DPTR,#compteurAntiRebond
   \   000023   7405         MOV     A,#0x5
   \   000025   F0           MOVX    @DPTR,A
   \   000026   A3           INC     DPTR
   \   000027   7400         MOV     A,#0x0
   \   000029   F0           MOVX    @DPTR,A
     74            serviceBaseDeTemps_execute[INTERFACEB1_PHASE] = interfaceB1_gere;
   \   00002A   90....       MOV     DPTR,#serviceBaseDeTemps_execute
   \   00002D   74..         MOV     A,#??interfaceB1_gere & 0xff
   \   00002F   F0           MOVX    @DPTR,A
   \   000030   A3           INC     DPTR
   \   000031   74..         MOV     A,#(??interfaceB1_gere >> 8) & 0xff
   \   000033   F0           MOVX    @DPTR,A
     75          }
   \   000034   D083         POP     DPH
   \   000036   D082         POP     DPL
   \   000038   22           RET

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       2      0      0  interfaceB1_gere()
                          2 0 0 -> piloteIOB1_litLEntree()
       2      0      0  interfaceB1_initialise()


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  compteurAntiRebond
       2  compteurAvantLecture
       3  interfaceB1
     166  interfaceB1_gere()
      57  interfaceB1_initialise()

 
 223 bytes in segment NEAR_CODE
   7 bytes in segment XDATA_Z
 
 223 bytes of CODE  memory
   7 bytes of XDATA memory

Errors: none
Warnings: none
